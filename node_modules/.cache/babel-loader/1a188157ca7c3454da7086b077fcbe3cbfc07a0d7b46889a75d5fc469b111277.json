{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/work_space/blast_frontend/src/Login/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function sendLoginRequest() {\n    const reqBody = {\n      username: username,\n      password: password\n    };\n    fetch('api/auth/login', {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(reqBody)\n    }).then(response => {\n      if (response.status === 200) return Promise.all([response.json(), response.headers]);else return Promise.reject(\"Invalid login attempt\");\n    }).then(_ref => {\n      let [body, headers] = _ref;\n      setJwt(headers.get(\"Authorization\"));\n      window.location.href = \"dashboard\";\n    }).catch(message => {\n      alert(message);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        type: \"button\",\n        onClick: () => sendLoginRequest(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"lCqwhzS5R1/jeWHrSia2nuEMkOc=\", false, function () {\n  return [useLocalState];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","jwt","setJwt","sendLoginRequest","reqBody","fetch","headers","method","body","JSON","stringify","then","response","status","Promise","all","json","reject","_ref","get","window","location","href","catch","message","alert","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/GitHub/work_space/blast_frontend/src/Login/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\n\nconst Login = () => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [jwt, setJwt] = useLocalState(\"\",\"jwt\");\n\n    function sendLoginRequest() {\n            const reqBody = {\n                username : username,\n                password : password\n            }\n        \n            fetch('api/auth/login', {\n                headers : {\n                \"Content-Type\" : \"application/json\" \n                },\n                method : \"post\",\n                body : JSON.stringify(reqBody),\n            })\n            .then((response) => {\n                if(response.status === 200)\n                    return Promise.all( [response.json(), response.headers]);\n                else\n                    return Promise.reject(\"Invalid login attempt\")\n            })\n            .then(([body, headers]) => {\n                setJwt(headers.get(\"Authorization\"));\n                window.location.href = \"dashboard\";\n            })\n            .catch((message) => {\n                alert(message);\n            });\n        } \n\n    return (\n        <>\n            <div>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"email\" id=\"username\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </div>\n            <div>\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n            </div>\n            <div>\n                <button id=\"submit\" type=\"button\" onClick={() =>  sendLoginRequest()}>\n                    Login\n                </button>\n            </div>\n        </>\n    );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}