{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/workspace/blast_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { useLocalState } from './util/UseLocalStorage';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport Homepage from './Homepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  useEffect(() => {\n    if (!jwt) {\n      const reqBody = {\n        \"username\": \"Lutendo\",\n        \"password\": \"Lodav72#\"\n      };\n      fetch('api/auth/login', {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"post\",\n        body: JSON.stringify(reqBody)\n      }).then(response => Promise.all([response.json(), response.headers])).then(_ref => {\n        let [body, headers] = _ref;\n        setJwt(headers.get(\"Authorization\"));\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(jwt);\n  }, [jwt]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z94CGe+5YtbesdSOutCLtKKbGTw=\", false, function () {\n  return [useLocalState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Route","Routes","useLocalState","Dashboard","Homepage","jsxDEV","_jsxDEV","App","_s","jwt","setJwt","reqBody","fetch","headers","method","body","JSON","stringify","then","response","Promise","all","json","_ref","get","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/workspace/blast_frontend/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { useLocalState } from './util/UseLocalStorage';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport Homepage from './Homepage';\n\n\nfunction App() {\n\n  const[jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  useEffect(() => {\n    if(!jwt) {\n      const reqBody = {\n        \"username\" : \"Lutendo\",\n        \"password\" : \"Lodav72#\"\n      }\n  \n      fetch('api/auth/login', {\n        headers : {\n          \"Content-Type\" : \"application/json\" \n        },\n        method : \"post\",\n        body : JSON.stringify(reqBody),\n      })\n      .then((response) => Promise.all( [response.json(), response.headers]))\n      .then(([body, headers]) => {\n          setJwt(headers.get(\"Authorization\"));\n        });\n    }  \n  }, []);\n\n  useEffect(() => {\n    console.log(jwt)\n  },[jwt]);\n\n\n  return ( \n    <Routes>\n      <Route path=\"/dashboard\" element={<Dashboard/>}/>\n      <Route \n        path=\"/\" \n        element={<Homepage/>}\n      />\n    </Routes>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAE7CH,SAAS,CAAC,MAAM;IACd,IAAG,CAACU,GAAG,EAAE;MACP,MAAME,OAAO,GAAG;QACd,UAAU,EAAG,SAAS;QACtB,UAAU,EAAG;MACf,CAAC;MAEDC,KAAK,CAAC,gBAAgB,EAAE;QACtBC,OAAO,EAAG;UACR,cAAc,EAAG;QACnB,CAAC;QACDC,MAAM,EAAG,MAAM;QACfC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACN,OAAO;MAC/B,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAAE,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAEH,QAAQ,CAACN,OAAO,CAAC,CAAC,CAAC,CACrEK,IAAI,CAACK,IAAA,IAAqB;QAAA,IAApB,CAACR,IAAI,EAAEF,OAAO,CAAC,GAAAU,IAAA;QAClBb,MAAM,CAACG,OAAO,CAACW,GAAG,CAAC,eAAe,CAAC,CAAC;MACtC,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd0B,OAAO,CAACC,GAAG,CAACjB,GAAG,CAAC;EAClB,CAAC,EAAC,CAACA,GAAG,CAAC,CAAC;EAGR,oBACEH,OAAA,CAACL,MAAM;IAAA0B,QAAA,gBACLrB,OAAA,CAACN,KAAK;MAAC4B,IAAI,EAAC,YAAY;MAACC,OAAO,eAAEvB,OAAA,CAACH,SAAS;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjD3B,OAAA,CAACN,KAAK;MACJ4B,IAAI,EAAC,GAAG;MACRC,OAAO,eAAEvB,OAAA,CAACF,QAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAGb;AAACzB,EAAA,CAxCQD,GAAG;EAAA,QAEWL,aAAa;AAAA;AAAAgC,EAAA,GAF3B3B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}