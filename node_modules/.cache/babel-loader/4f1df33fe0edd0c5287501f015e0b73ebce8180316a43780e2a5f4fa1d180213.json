{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/work_space/blast_frontend/src/AssignmentView/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AssignmentView = () => {\n  _s();\n  const assignmentId = window.location.href.split(\"/assignments/\")[1];\n  const [assignment, setAssignment] = useState(null);\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [gitHubUrl, setGitHubUrl] = useState(\"\");\n  const [branch, setBranch] = useState(\"\");\n  function updateAssignment(prop, value) {\n    assignment[prop] = value;\n    console.log(assignment);\n  }\n  useEffect(() => {\n    fetch(`/api/v1/assignments/${assignmentId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"GET\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Assignment \", assignmentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"GitHub URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"gitHubUrl\",\n          onChange: e => setGitHubUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Branch: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          onChange: e => setBranch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AssignmentView, \"Gi6h+TA+9a1Xffwu8cmY5bIF9Rg=\", false, function () {\n  return [useLocalState];\n});\n_c = AssignmentView;\nexport default AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","assignmentId","window","location","href","split","assignment","setAssignment","jwt","setJwt","gitHubUrl","setGitHubUrl","branch","setBranch","updateAssignment","prop","value","console","log","fetch","headers","Authorization","method","then","response","status","json","assignmentData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/GitHub/work_space/blast_frontend/src/AssignmentView/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\n\nconst AssignmentView = () => {\n    const assignmentId = window.location.href.split(\"/assignments/\")[1];\n    const [assignment, setAssignment] = useState(null);\n    const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n    const [gitHubUrl, setGitHubUrl] = useState(\"\");\n    const [branch, setBranch] = useState(\"\");\n\n    function updateAssignment(prop, value) {\n        assignment[prop] = value;\n        console.log(assignment);\n    }\n\n\n    useEffect(() => {\n        fetch(`/api/v1/assignments/${assignmentId}`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${jwt}`,\n            },\n            method: \"GET\",\n        }).then((response) => {\n            if(response.status === 200) return response.json();\n        }).then((assignmentData) =>{\n            setAssignment(assignmentData);\n        });    \n    }, []);\n\n    return (\n        <div>\n            <h1>Assignment {assignmentId}</h1>\n            {assignment ? ( \n                <>\n                    <h2>Status: {assignment.status}</h2>\n                    <h3>GitHub URL: <input type=\"url\" id=\"gitHubUrl\" onChange={(e) => setGitHubUrl(e.target.value)}/></h3>\n                    <h3>Branch: <input type=\"text\" id=\"branch\" onChange={(e) => setBranch(e.target.value)}/></h3>\n                    <button>Submit Assignment</button>\n\n                </> \n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default AssignmentView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}