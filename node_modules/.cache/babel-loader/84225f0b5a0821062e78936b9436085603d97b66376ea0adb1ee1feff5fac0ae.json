{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/work_space/blast_frontend/src/AssignmentView/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AssignmentView = () => {\n  _s();\n  const assignmentId = window.location.href.split(\"/assignments/\")[1];\n  const [assignment, setAssignment] = useState({\n    branch: \"\",\n    githubUrl: \"\"\n  });\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function updateAssignment(prop, value) {\n    assignment[prop] = value;\n    console.log(assignment);\n  }\n  function save() {\n    fetch(`/api/v1/assignments/${assignmentId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"PUT\",\n      body: JSON.stringify(assignment)\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }\n  useEffect(() => {\n    fetch(`/api/v1/assignments/${assignmentId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"GET\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Assignment \", assignmentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"GitHub URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"githubUrl\",\n          onChange: e => updateAssignment(\"githubUrl\", e.target.value),\n          value: assignment.githubUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Branch: \", \" \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          onChange: e => updateAssignment(\"branch\", e.target.value),\n          value: assignment.branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => save(),\n        children: \" Submit Assignment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AssignmentView, \"p0pI3tZOD7ajl8DB34OC/lUjqR8=\", false, function () {\n  return [useLocalState];\n});\n_c = AssignmentView;\nexport default AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","assignmentId","window","location","href","split","assignment","setAssignment","branch","githubUrl","jwt","setJwt","updateAssignment","prop","value","console","log","save","fetch","headers","Authorization","method","body","JSON","stringify","then","response","status","json","assignmentData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/GitHub/work_space/blast_frontend/src/AssignmentView/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\n\nconst AssignmentView = () => {\n    const assignmentId = window.location.href.split(\"/assignments/\")[1];\n    const [assignment, setAssignment] = useState({\n        branch: \"\",\n        githubUrl: \"\"\n    });\n    const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n    function updateAssignment(prop, value) {\n        assignment[prop] = value;\n        console.log(assignment);\n    }\n\n    function save() {\n        fetch(`/api/v1/assignments/${assignmentId}`,{\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${jwt}`,\n            },\n            method: \"PUT\",\n            body: JSON.stringify(assignment),\n        } ).then((response) => {\n            if (response.status === 200) return response.json();\n        }).then((assignmentData) => {\n            setAssignment(assignmentData);\n        });\n    }\n\n\n    useEffect(() => {\n        fetch(`/api/v1/assignments/${assignmentId}`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${jwt}`,\n            },\n            method: \"GET\",\n        }).then((response) => {\n            if(response.status === 200) return response.json();\n        }).then((assignmentData) =>{\n            setAssignment(assignmentData);\n        });    \n    }, []);\n\n    return (\n        <div>\n            <h1>Assignment {assignmentId}</h1>\n            {assignment ? ( \n                <>\n                    <h2>Status: {assignment.status}</h2>\n                    <h3>GitHub URL: <input type=\"url\" id=\"githubUrl\" onChange={(e) => updateAssignment(\"githubUrl\", e.target.value)} value={assignment.githubUrl}/></h3>\n                    <h3>Branch: {\" \"} <input type=\"text\" id=\"branch\" onChange={(e) => updateAssignment(\"branch\", e.target.value)} value={assignment.branch}/></h3>\n                    <button onClick = {() => save()}> Submit Assignment </button>\n\n                </> \n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default AssignmentView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}