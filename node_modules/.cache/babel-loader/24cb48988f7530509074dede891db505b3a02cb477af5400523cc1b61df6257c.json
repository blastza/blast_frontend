{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/work_space/blast_frontend/src/AssignmentView/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\nimport ajax from '../services/fetchService';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AssignmentView = () => {\n  _s();\n  const assignmentId = window.location.href.split(\"/assignments/\")[1];\n  const [assignment, setAssignment] = useState({\n    branch: \"\",\n    githubUrl: \"\"\n  });\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function updateAssignment(prop, value) {\n    const newAssignment = {\n      ...assignment\n    };\n    newAssignment[prop] = value;\n    setAssignment(newAssignment);\n  }\n  function save() {\n    ajax(`/api/v1/assignments/${assignmentId}`, \"PUT\", jwt, assignment).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }\n  useEffect(() => {\n    ajax(`/api/v1/assignments/${assignmentId}`, \"GET\", jwt).then(assignmentData => {\n      //if (assignmentData.branch === null) assignmentData.branch = \"\";\n      //if (assignment.githubUrl === null) assignmentData.githubUrl = \"\";\n      setAssignment(assignmentData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Assignment \", assignmentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"GitHub URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"githubUrl\",\n          onChange: e => updateAssignment(\"githubUrl\", e.target.value),\n          value: assignment.githubUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Branch: \", \" \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          onChange: e => updateAssignment(\"branch\", e.target.value),\n          value: assignment.branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        onClick: () => save(),\n        children: \" Submit Assignment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(AssignmentView, \"p0pI3tZOD7ajl8DB34OC/lUjqR8=\", false, function () {\n  return [useLocalState];\n});\n_c = AssignmentView;\nexport default AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useLocalState","ajax","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","assignmentId","window","location","href","split","assignment","setAssignment","branch","githubUrl","jwt","setJwt","updateAssignment","prop","value","newAssignment","save","then","assignmentData","children","fileName","_jsxFileName","lineNumber","columnNumber","status","type","id","onChange","e","target","size","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/GitHub/work_space/blast_frontend/src/AssignmentView/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/UseLocalStorage';\nimport ajax from '../services/fetchService';\nimport { Button } from 'react-bootstrap';\n\nconst AssignmentView = () => {\n    const assignmentId = window.location.href.split(\"/assignments/\")[1];\n    const [assignment, setAssignment] = useState({\n        branch: \"\",\n        githubUrl: \"\"\n    });\n    const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n    function updateAssignment(prop, value) {\n        const newAssignment = {...assignment};\n        newAssignment[prop] = value;\n        setAssignment(newAssignment);\n    }\n\n    function save() {\n        ajax(`/api/v1/assignments/${assignmentId}`, \"PUT\", jwt, assignment).then(\n            (assignmentData) => {\n                setAssignment(assignmentData);\n            }\n        );\n    }\n\n    useEffect(() => {\n        ajax(`/api/v1/assignments/${assignmentId}`, \"GET\", jwt).then(\n            (assignmentData) =>{\n                //if (assignmentData.branch === null) assignmentData.branch = \"\";\n                //if (assignment.githubUrl === null) assignmentData.githubUrl = \"\";\n                setAssignment(assignmentData);\n            }\n        );    \n    }, []);\n\n    return (\n        <div>\n            <h1>Assignment {assignmentId}</h1>\n            {assignment ? ( \n                <>\n                    <h2>Status: {assignment.status}</h2>\n                    <h3>GitHub URL: <input type=\"url\" id=\"githubUrl\" onChange={(e) => updateAssignment(\"githubUrl\", e.target.value)} value={assignment.githubUrl}/></h3>\n                    <h3>Branch: {\" \"} <input type=\"text\" id=\"branch\" onChange={(e) => updateAssignment(\"branch\", e.target.value)} value={assignment.branch}/></h3>\n                    <Button size=\"lg\" onClick = {() => save()}> Submit Assignment </Button>\n\n                </> \n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default AssignmentView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}